plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'com.xmen.magneto'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.6.8'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'io.r2dbc:r2dbc-h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

jacoco {
	toolVersion = "0.8.8"
	reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
	reports {
		xml.enabled true
		csv.enabled false
		html.destination file("${buildDir}/jacocoHtml")
		xml.destination file("${buildDir}/jacocoXML/jacoco.xml")
	}
}

jacocoTestCoverageVerification {
	violationRules {

		rule {
			enabled = true
			element = 'CLASS'
			includes = ['com.xmen.magneto.recruitment.*']
			excludes = ['com.xmen.magneto.recruitment.*.model.*']
			limit {
				minimum = 0.8
			}
		}

		rule {
			enabled = true
			element = 'CLASS'
			includes = ['com.xmen.magneto.recruitment.*']

			limit {
				counter = 'LINE'
				value = 'TOTALCOUNT'
				maximum = 100
			}
		}
	}
}
